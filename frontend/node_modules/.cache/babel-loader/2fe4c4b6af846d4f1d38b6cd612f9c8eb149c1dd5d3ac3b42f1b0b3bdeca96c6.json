{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\my-learning-platform\\\\fronend\\\\src\\\\component\\\\courses\\\\course.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./course.css\";\nimport { useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Courses() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  // const { count, increment } = useContext(CountContext);\n\n  useEffect(() => {\n    // Fetch the courses data from your API\n    fetch('http://localhost:4000/courses') // Adjust this URL to where your backend is hosted, e.g., http://localhost:3000/data\n    .then(response => response.json()).then(data => {\n      // Assuming your data structure looks like { \"courses\": [ \"Course1\", \"Course2\", ... ] }\n      setCourses(data.courses); // Update the state with the fetched courses\n    }).catch(error => console.error('There was an error fetching the courses:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"start\",\n        children: \"Courses We offer :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"last\",\n        children: courses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: course\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this) // Use course or index as a key as appropriate\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Courses, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Courses","_s","courses","setCourses","fetch","then","response","json","data","catch","error","console","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","course","index","_c","$RefreshReg$"],"sources":["C:/Javascript/my-learning-platform/fronend/src/component/courses/course.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./course.css\"\r\nimport  { useState, useEffect, useContext} from 'react';\r\n\r\nexport default function Courses() {\r\n  const [courses, setCourses] = useState([]);\r\n  // const { count, increment } = useContext(CountContext);\r\n\r\n  useEffect(() => {\r\n    // Fetch the courses data from your API\r\n    fetch('http://localhost:4000/courses') // Adjust this URL to where your backend is hosted, e.g., http://localhost:3000/data\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Assuming your data structure looks like { \"courses\": [ \"Course1\", \"Course2\", ... ] }\r\n            setCourses(data.courses); // Update the state with the fetched courses\r\n        })\r\n        .catch(error => console.error('There was an error fetching the courses:', error));\r\n}, []); \r\n  return (\r\n    <>\r\n    <div>\r\n      <h1 id=\"start\">Courses We offer :</h1>\r\n      <ul id=\"last\">\r\n      {courses.map((course, index) => (\r\n                    <li key={index}>{course}</li> // Use course or index as a key as appropriate\r\n                ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAAUC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C;;EAEAC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAAA,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV;MACAL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC,CAAC;EACzF,CAAC,EAAE,EAAE,CAAC;EACJ,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACAf,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAIgB,EAAE,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCpB,OAAA;QAAIgB,EAAE,EAAC,MAAM;QAAAD,QAAA,EACZV,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACbvB,OAAA;UAAAe,QAAA,EAAiBO;QAAM,GAAdC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,CAAC;QACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACJ,CAAC;AAEP;AAAChB,EAAA,CA1BuBD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}