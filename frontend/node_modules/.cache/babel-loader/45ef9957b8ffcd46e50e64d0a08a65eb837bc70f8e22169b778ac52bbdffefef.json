{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\learning app\\\\learning-app-combinedwithbuild\\\\frontend\\\\src\\\\component\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setShowPopup(false); // Hide popup when toggling mode\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    if (isLoginMode) {\n      // Login logic\n      if (email === 'user@example.com' && password === 'password') {\n        // Navigate to /home if login is successful\n        navigate('/home');\n      } else {\n        setPopupMessage('Login Failed!');\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 3000);\n      }\n    } else {\n      // Signup logic (simplified example)\n      if (email && password) {\n        // Navigate to /login on successful signup\n        navigate('/login');\n      } else {\n        setPopupMessage('Signup Failed!');\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 3000);\n      }\n    }\n  };\n  const renderForm = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isLoginMode ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLoginMode ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        backgroundColor: '#f44336',\n        color: '#fff'\n      },\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isLoginMode ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMode,\n        className: \"toggleModeButton\",\n        children: isLoginMode ? 'Sign Up Here' : 'Login Here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"ycGCl/glU60DsqN3nZ2asDwTwPw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","isLoginMode","setIsLoginMode","showPopup","setShowPopup","popupMessage","setPopupMessage","navigate","toggleMode","handleSubmit","event","preventDefault","email","document","getElementById","value","password","setTimeout","renderForm","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","className","onSubmit","style","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["C:/Javascript/learning app/learning-app-combinedwithbuild/frontend/src/component/login/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport \"./login.css\";\n\nfunction Login() {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setShowPopup(false); // Hide popup when toggling mode\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    \n    if (isLoginMode) {\n      // Login logic\n      if (email === 'user@example.com' && password === 'password') {\n        // Navigate to /home if login is successful\n        navigate('/home');\n      } else {\n        setPopupMessage('Login Failed!');\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 3000);\n      }\n    } else {\n      // Signup logic (simplified example)\n      if (email && password) {\n        // Navigate to /login on successful signup\n        navigate('/login');\n      } else {\n        setPopupMessage('Signup Failed!');\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 3000);\n      }\n    }\n  };\n\n  const renderForm = () => (\n    <>\n      <label htmlFor=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" required />\n      <label htmlFor=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" required />\n      <button type=\"submit\">{isLoginMode ? 'Login' : 'Sign Up'}</button>\n    </>\n  );\n\n  return (\n    <div className=\"login-container\">\n      <h1>{isLoginMode ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={handleSubmit}>\n        {renderForm()}\n      </form>\n      {showPopup && (\n        <div className=\"popup\" style={{backgroundColor: '#f44336', color: '#fff'}}>\n          {popupMessage}\n        </div>\n      )}\n      <p>\n        {isLoginMode ? \"Don't have an account? \" : \"Already have an account? \"}\n        {/* Using button instead of a link to prevent page reload */}\n        <button onClick={toggleMode} className=\"toggleModeButton\">\n          {isLoginMode ? 'Sign Up Here' : 'Login Here'}\n        </button>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}