{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\my-learning-platform\\\\fronend\\\\src\\\\component\\\\courses\\\\course.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./course.css\";\nimport { useState, useEffect, useContext } from 'react';\nimport CountContext from './CountContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Courses() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const {\n    setCount\n  } = useContext(CountContext);\n  const increment = () => {\n    setCount(count => count + 1);\n  };\n  useEffect(() => {\n    // Fetch the courses data from your API\n    fetch('http://localhost:4000/courses') // Adjust this URL to where your backend is hosted, e.g., http://localhost:3000/data\n    .then(response => response.json()).then(data => {\n      // Assuming your data structure looks like { \"courses\": [ \"Course1\", \"Course2\", ... ] }\n      setCourses(data.courses); // Update the state with the fetched courses\n    }).catch(error => console.error('There was an error fetching the courses:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"start\",\n        children: \"Courses We offer :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"last\",\n        children: courses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [course, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: increment,\n            children: \"choose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Courses, \"NtcaJNRtI2dxj+lmgRv94SRlQ/w=\");\n_c = Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CountContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Courses","_s","courses","setCourses","setCount","increment","count","fetch","then","response","json","data","catch","error","console","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","course","index","onClick","_c","$RefreshReg$"],"sources":["C:/Javascript/my-learning-platform/fronend/src/component/courses/course.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./course.css\"\r\nimport  { useState, useEffect, useContext} from 'react';\r\nimport CountContext from './CountContext';\r\n\r\nexport default function Courses() {\r\n  const [courses, setCourses] = useState([]);\r\n  const { setCount } = useContext(CountContext);\r\n\r\n\r\n\r\n  const increment = () => {\r\n    setCount((count) => count + 1)\r\n};\r\n\r\n  useEffect(() => {\r\n    // Fetch the courses data from your API\r\n    fetch('http://localhost:4000/courses') // Adjust this URL to where your backend is hosted, e.g., http://localhost:3000/data\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Assuming your data structure looks like { \"courses\": [ \"Course1\", \"Course2\", ... ] }\r\n            setCourses(data.courses); // Update the state with the fetched courses\r\n        })\r\n        .catch(error => console.error('There was an error fetching the courses:', error));\r\n}, []); \r\n  return (\r\n    <>\r\n    <div>\r\n      <h1 id=\"start\">Courses We offer :</h1>\r\n      <ul id=\"last\">\r\n      {courses.map((course, index) => (\r\n                    <li key={index}>{course}\r\n                    <button onClick={increment}>choose</button>\r\n                    </li> \r\n                ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAAUC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AACvD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEY;EAAS,CAAC,GAAGV,UAAU,CAACC,YAAY,CAAC;EAI7C,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAEE,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;EAClC,CAAC;EAECb,SAAS,CAAC,MAAM;IACd;IACAc,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAAA,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV;MACAR,UAAU,CAACQ,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC,CAAC;EACzF,CAAC,EAAE,EAAE,CAAC;EACJ,oBACEhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAImB,EAAE,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCvB,OAAA;QAAImB,EAAE,EAAC,MAAM;QAAAD,QAAA,EACZb,OAAO,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACb1B,OAAA;UAAAkB,QAAA,GAAiBO,MAAM,eACvBzB,OAAA;YAAQ2B,OAAO,EAAEnB,SAAU;YAAAU,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GADlCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACJ,CAAC;AAEP;AAACnB,EAAA,CAlCuBD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}