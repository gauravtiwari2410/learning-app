{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\learning app\\\\learning-app-combinedwithbuild\\\\frontend\\\\src\\\\component\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login({\n  loginStatus,\n  loginStatusMethod\n}) {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setShowPopup(false); // Hide popup when toggling mode\n  };\n  const handleSubmit = async event => {\n    // event.preventDefault();\n\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const endpoint = isLoginMode ? '/login' : '/signup';\n    // const url = `https://learning-app-7j1c.onrender.com${endpoint}`; // Adjust the port if your backend uses a different one\n    const url = `http://http://localhost:3000/login`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (isLoginMode) {\n          // Navigate to /coursecontent if login is successful\n          loginStatusMethod(true);\n          navigate('/coursecontent');\n        } else {\n          // Handle signup success\n          setPopupMessage('Signup Successful! Please log in.');\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            toggleMode();\n          }, 3000);\n        }\n      } else {\n        throw new Error(data.message || 'An error occurred');\n      }\n    } catch (error) {\n      setPopupMessage(error.message);\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 3000);\n    }\n  };\n  const renderForm = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isLoginMode ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLoginMode ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"post\",\n      children: renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        backgroundColor: '#f44336',\n        color: '#fff'\n      },\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isLoginMode ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMode,\n        id: \"toggleModeButton\",\n        children: isLoginMode ? 'Sign Up Here' : 'Login Here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"ycGCl/glU60DsqN3nZ2asDwTwPw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","loginStatus","loginStatusMethod","_s","isLoginMode","setIsLoginMode","showPopup","setShowPopup","popupMessage","setPopupMessage","navigate","toggleMode","handleSubmit","event","email","document","getElementById","value","password","endpoint","url","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","Error","message","error","renderForm","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","className","onSubmit","style","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["C:/Javascript/learning app/learning-app-combinedwithbuild/frontend/src/component/login/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport \"./login.css\";\n\nfunction Login({loginStatus, loginStatusMethod}) {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setShowPopup(false); // Hide popup when toggling mode\n  };\n\n  const handleSubmit = async (event) => {\n    // event.preventDefault();\n    \n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    \n    const endpoint = isLoginMode ? '/login' : '/signup';\n    // const url = `https://learning-app-7j1c.onrender.com${endpoint}`; // Adjust the port if your backend uses a different one\n    const url = `http://http://localhost:3000/login`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        if (isLoginMode) {\n          // Navigate to /coursecontent if login is successful\n          loginStatusMethod(true);\n          navigate('/coursecontent');\n        } else {\n          // Handle signup success\n          setPopupMessage('Signup Successful! Please log in.');\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            toggleMode();\n          }, 3000);\n        }\n      } else {\n        throw new Error(data.message || 'An error occurred');\n      }\n    } catch (error) {\n      setPopupMessage(error.message);\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 3000);\n    }\n  };\n\n  const renderForm = () => (\n    <>\n      <label htmlFor=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" required />\n      <label htmlFor=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" required />\n      <button type=\"submit\">{isLoginMode ? 'Login' : 'Sign Up'}</button>\n    </>\n  );\n\n  return (\n    <div className=\"login-container\">\n      <h1>{isLoginMode ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={handleSubmit} method='post'>\n        {renderForm()}\n      </form>\n      {showPopup && (\n        <div className=\"popup\" style={{backgroundColor: '#f44336', color: '#fff'}}>\n          {popupMessage}\n        </div>\n      )}\n      <p>\n        {isLoginMode ? \"Don't have an account? \" : \"Already have an account? \"}\n        <button onClick={toggleMode} id=\"toggleModeButton\">\n          {isLoginMode ? 'Sign Up Here' : 'Login Here'}\n        </button>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}