{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);const login=()=>setIsLoggedIn(true);const logout=()=>setIsLoggedIn(false);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,login,logout},children:children});};// Hook for easy context usage\nexport const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","login","logout","Provider","value","useAuth"],"sources":["C:/Javascript/learning app/learning-app-combinedwithbuild/frontend/src/component/auth/auth.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = () => setIsLoggedIn(true);\r\n  const logout = () => setIsLoggedIn(false);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook for easy context usage\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAS,KAAK,CAAGA,CAAA,GAAMD,aAAa,CAAC,IAAI,CAAC,CACvC,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAMF,aAAa,CAAC,KAAK,CAAC,CAEzC,mBACEN,IAAA,CAACC,WAAW,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEL,UAAU,CAAEE,KAAK,CAAEC,MAAO,CAAE,CAAAJ,QAAA,CACxDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAMd,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}